// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TravelDesk_Api.Migrations
{
    [DbContext(typeof(TravelDeskContext))]
    [Migration("20250828101146_emp")]
    partial class emp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RequestComment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("RequestId");

                    b.HasIndex("UserId");

                    b.ToTable("RequestComments");
                });

            modelBuilder.Entity("TravelDesk_Api.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "HR Travel Admin"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Employee"
                        },
                        new
                        {
                            RoleId = 4,
                            RoleName = "Manager"
                        });
                });

            modelBuilder.Entity("TravelDesk_Api.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("ManagerId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Department = "IT",
                            Email = "admin@traveldesk.com",
                            EmployeeId = "A001",
                            FirstName = "System",
                            IsDeleted = false,
                            LastName = "Admin",
                            PasswordHash = new byte[] { 36, 50, 97, 36, 49, 49, 36, 66, 85, 111, 76, 53, 56, 82, 73, 88, 54, 105, 97, 67, 121, 74, 80, 57, 101, 112, 77, 65, 117, 82, 100, 104, 65, 66, 113, 109, 113, 54, 90, 117, 108, 98, 47, 90, 71, 78, 77, 100, 115, 69, 52, 81, 109, 46, 67, 54, 74, 54, 69, 75 },
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            Department = "HR",
                            Email = "hr@traveldesk.com",
                            EmployeeId = "T001",
                            FirstName = "Hr",
                            IsDeleted = false,
                            LastName = "Travel",
                            PasswordHash = new byte[] { 36, 50, 97, 36, 49, 49, 36, 69, 88, 54, 114, 113, 72, 57, 97, 118, 76, 73, 122, 98, 102, 122, 49, 109, 52, 120, 115, 82, 46, 112, 89, 75, 49, 88, 98, 121, 101, 55, 84, 88, 111, 85, 102, 72, 48, 84, 67, 80, 83, 102, 98, 75, 56, 120, 88, 86, 57, 99, 87, 97 },
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            Department = "Sales",
                            Email = "employee@traveldesk.com",
                            EmployeeId = "E001",
                            FirstName = "Regular",
                            IsDeleted = false,
                            LastName = "Employee",
                            ManagerId = 4,
                            PasswordHash = new byte[] { 36, 50, 97, 36, 49, 49, 36, 81, 101, 116, 121, 104, 46, 73, 79, 86, 101, 78, 85, 103, 77, 78, 51, 80, 65, 83, 72, 68, 79, 48, 86, 50, 81, 57, 90, 69, 120, 70, 82, 76, 97, 51, 108, 111, 101, 50, 108, 66, 66, 88, 119, 113, 66, 67, 105, 53, 55, 65, 52, 50 },
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 4,
                            Department = "Engineering",
                            Email = "manager@traveldesk.com",
                            EmployeeId = "M001",
                            FirstName = "Project",
                            IsDeleted = false,
                            LastName = "Manager",
                            PasswordHash = new byte[] { 36, 50, 97, 36, 49, 49, 36, 121, 66, 78, 67, 88, 116, 51, 74, 108, 49, 69, 118, 98, 72, 110, 74, 56, 114, 104, 78, 49, 46, 117, 71, 49, 67, 113, 65, 86, 69, 48, 117, 47, 120, 121, 117, 73, 78, 79, 82, 71, 102, 102, 102, 50, 109, 74, 56, 108, 103, 119, 122, 121 },
                            RoleId = 4
                        },
                        new
                        {
                            UserId = 5,
                            Department = "Marketing",
                            Email = "janedoe@traveldesk.com",
                            EmployeeId = "E123",
                            FirstName = "Jane",
                            IsDeleted = false,
                            LastName = "Doe",
                            ManagerId = 4,
                            PasswordHash = new byte[] { 36, 50, 97, 36, 49, 49, 36, 81, 101, 116, 121, 104, 46, 73, 79, 86, 101, 78, 85, 103, 77, 78, 51, 80, 65, 83, 72, 68, 79, 48, 86, 50, 81, 57, 90, 69, 120, 70, 82, 76, 97, 51, 108, 111, 101, 50, 108, 66, 66, 88, 119, 113, 66, 67, 105, 53, 55, 65, 52, 50 },
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("TravelRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<string>("AadhaarNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DaysOfStay")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("MealPreference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MealRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportFileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonForTravelling")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfBooking")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VisaFileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequestId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("UserId");

                    b.ToTable("TravelRequests");
                });

            modelBuilder.Entity("RequestComment", b =>
                {
                    b.HasOne("TravelRequest", "TravelRequest")
                        .WithMany("Comments")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelDesk_Api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TravelRequest");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TravelDesk_Api.Models.User", b =>
                {
                    b.HasOne("TravelDesk_Api.Models.User", "Manager")
                        .WithMany("Subordinates")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TravelDesk_Api.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TravelRequest", b =>
                {
                    b.HasOne("TravelDesk_Api.Models.User", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.HasOne("TravelDesk_Api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TravelDesk_Api.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("TravelDesk_Api.Models.User", b =>
                {
                    b.Navigation("Subordinates");
                });

            modelBuilder.Entity("TravelRequest", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
