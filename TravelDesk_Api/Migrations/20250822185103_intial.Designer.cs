// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TravelDesk_Api.Migrations
{
    [DbContext(typeof(TravelDeskContext))]
    [Migration("20250822185103_intial")]
    partial class intial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelDesk_Api.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "HR Travel Admin"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Employee"
                        },
                        new
                        {
                            RoleId = 4,
                            RoleName = "Manager"
                        });
                });

            modelBuilder.Entity("TravelDesk_Api.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Department = "IT",
                            Email = "admin@traveldesk.com",
                            EmployeeId = "A001",
                            FirstName = "System",
                            LastName = "Admin",
                            PasswordHash = new byte[] { 36, 50, 97, 36, 49, 49, 36, 57, 82, 46, 98, 65, 46, 110, 49, 74, 48, 106, 53, 66, 53, 108, 54, 102, 52, 71, 46, 109, 79, 57, 108, 48, 112, 48, 118, 49, 116, 50, 117, 51, 120, 52, 121, 53, 122, 54, 97, 55, 98, 56, 99, 57, 100, 48, 101, 49, 102 },
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            Department = "HR",
                            Email = "hr@traveldesk.com",
                            EmployeeId = "T001",
                            FirstName = "Hr",
                            LastName = "Travel",
                            PasswordHash = new byte[] { 36, 50, 97, 36, 49, 49, 36, 57, 82, 46, 98, 65, 46, 110, 49, 74, 48, 106, 53, 66, 53, 108, 54, 102, 52, 71, 46, 109, 79, 57, 108, 48, 112, 48, 118, 49, 116, 50, 117, 51, 120, 52, 121, 53, 122, 54, 97, 55, 98, 56, 99, 57, 100, 48, 101, 49, 102 },
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            Department = "Sales",
                            Email = "employee@traveldesk.com",
                            EmployeeId = "E001",
                            FirstName = "Regular",
                            LastName = "Employee",
                            PasswordHash = new byte[] { 36, 50, 97, 36, 49, 49, 36, 57, 82, 46, 98, 65, 46, 110, 49, 74, 48, 106, 53, 66, 53, 108, 54, 102, 52, 71, 46, 109, 79, 57, 108, 48, 112, 48, 118, 49, 116, 50, 117, 51, 120, 52, 121, 53, 122, 54, 97, 55, 98, 56, 99, 57, 100, 48, 101, 49, 102 },
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 4,
                            Department = "Engineering",
                            Email = "manager@traveldesk.com",
                            EmployeeId = "M001",
                            FirstName = "Project",
                            LastName = "Manager",
                            PasswordHash = new byte[] { 36, 50, 97, 36, 49, 49, 36, 57, 82, 46, 98, 65, 46, 110, 49, 74, 48, 106, 53, 66, 53, 108, 54, 102, 52, 71, 46, 109, 79, 57, 108, 48, 112, 48, 118, 49, 116, 50, 117, 51, 120, 52, 121, 53, 122, 54, 97, 55, 98, 56, 99, 57, 100, 48, 101, 49, 102 },
                            RoleId = 4
                        });
                });

            modelBuilder.Entity("TravelDesk_Api.Models.User", b =>
                {
                    b.HasOne("TravelDesk_Api.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TravelDesk_Api.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
